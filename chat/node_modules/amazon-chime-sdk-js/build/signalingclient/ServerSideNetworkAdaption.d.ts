import { SdkServerSideNetworkAdaption } from '../signalingprotocol/SignalingProtocol';
/**
 * [[ServerSideNetworkAdaption]] represents additional server side features that can be enabled for network adaption.
 */
export declare enum ServerSideNetworkAdaption {
    /**
     * No features enabled, but can be overriden from server side values.
     */
    Default = 0,
    /**
     * No features enabled. Will not be override from server side choice.
     */
    None = 1,
    /**
     * Disable the existing client side bandwidth probing methods of waiting and unpausing,
     * or waiting and upgrading simulcast streams (which can be large increases of bitrates
     * and may lead to periodic oversubscription over network capacity
     * and resulting video freezes) and replace it with more gradual server
     * side probing of increasing amounts padding packets until the
     * bandwidth estimate safely reaches the value needed to resume the
     * next video source, or upgrade to the next higher simulcast stream.
     *
     * When this is enabled, any policy 'probing' for bandwidth headroom
     * should be disabled. This may also enable pacing of some media packets from the server
     * side, and may also enable packet burst probing.
     *
     * End users should overall see reduced video freezes, reduced broken audio,
     * and reduced packet loss.
     */
    BandwidthProbing = 2
}
export default ServerSideNetworkAdaption;
export declare function convertServerSideNetworkAdaptionEnumFromSignaled(adaption: SdkServerSideNetworkAdaption): ServerSideNetworkAdaption;
export declare function convertServerSideNetworkAdaptionEnumToSignaled(adaption: ServerSideNetworkAdaption): SdkServerSideNetworkAdaption;
