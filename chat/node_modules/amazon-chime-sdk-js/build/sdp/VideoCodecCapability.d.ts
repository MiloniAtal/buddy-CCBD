import { SdkVideoCodecCapability } from '../signalingprotocol/SignalingProtocol';
import { Eq } from '../utils/Types';
/**
 * `VideoCodecCapability` represents a higher level type to wrap `RTCRtpCodecCapability`
 * and the codec name used in the SDP, while also namespacing static create functions
 * for codecs supported in the SDK.
 *
 * Note that `codecName` is different then `codecCapability.mimeType`
 */
export default class VideoCodecCapability implements Eq {
    readonly codecName: string;
    readonly codecCapability: RTCRtpCodecCapability;
    constructor(codecName: string, codecCapability: RTCRtpCodecCapability);
    equals(other: this): boolean;
    /**
     * Returns the configuration of VP8 supported by the SDK
     */
    static vp8(): VideoCodecCapability;
    /**
     * Returns the configuration of H.264 CBP supported by the SDK
     */
    static h264ConstrainedBaselineProfile(): VideoCodecCapability;
    /**
     * Returns the configuration of H.264 recommended by the SDK
     */
    static h264(): VideoCodecCapability;
    /**
     * Returns the configuration of codec corresponding to the signaled capability
     */
    static fromSignaled(capability: SdkVideoCodecCapability): VideoCodecCapability | undefined;
}
